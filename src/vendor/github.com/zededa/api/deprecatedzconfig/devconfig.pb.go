// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devconfig.proto

package deprecatedzconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EdgeDevConfig struct {
	Id                 *UUIDandVersion      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DevConfigSha256    []byte               `protobuf:"bytes,2,opt,name=devConfigSha256,proto3" json:"devConfigSha256,omitempty"`
	DevConfigSignature []byte               `protobuf:"bytes,3,opt,name=devConfigSignature,proto3" json:"devConfigSignature,omitempty"`
	Apps               []*AppInstanceConfig `protobuf:"bytes,4,rep,name=apps" json:"apps,omitempty"`
	Networks           []*UnderlayNetwork   `protobuf:"bytes,5,rep,name=networks" json:"networks,omitempty"`
}

func (m *EdgeDevConfig) Reset()                    { *m = EdgeDevConfig{} }
func (m *EdgeDevConfig) String() string            { return proto.CompactTextString(m) }
func (*EdgeDevConfig) ProtoMessage()               {}
func (*EdgeDevConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *EdgeDevConfig) GetId() *UUIDandVersion {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EdgeDevConfig) GetDevConfigSha256() []byte {
	if m != nil {
		return m.DevConfigSha256
	}
	return nil
}

func (m *EdgeDevConfig) GetDevConfigSignature() []byte {
	if m != nil {
		return m.DevConfigSignature
	}
	return nil
}

func (m *EdgeDevConfig) GetApps() []*AppInstanceConfig {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *EdgeDevConfig) GetNetworks() []*UnderlayNetwork {
	if m != nil {
		return m.Networks
	}
	return nil
}

func init() {
	proto.RegisterType((*EdgeDevConfig)(nil), "EdgeDevConfig")
}

func init() { proto.RegisterFile("devconfig.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0xd0, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0x06, 0x70, 0xda, 0x4d, 0x91, 0xcc, 0x31, 0xc9, 0xa9, 0x78, 0x59, 0xf1, 0xa0, 0x3d, 0x48,
	0x0a, 0x15, 0xbd, 0xab, 0xf3, 0x30, 0x0f, 0x1e, 0x2a, 0xf5, 0xe0, 0x2d, 0xcb, 0xfb, 0xda, 0x05,
	0xd7, 0x24, 0x24, 0x69, 0xc5, 0x7d, 0x5a, 0x3f, 0x8a, 0x90, 0xf8, 0x07, 0x65, 0xc7, 0x3c, 0xcf,
	0x0f, 0xc2, 0xfb, 0x90, 0x19, 0xe0, 0x20, 0xb4, 0x7a, 0x91, 0x2d, 0x33, 0x56, 0x7b, 0x7d, 0x1c,
	0x83, 0xae, 0xd3, 0xea, 0x3b, 0xe0, 0xc6, 0xfc, 0x11, 0x53, 0x85, 0xfe, 0x4d, 0xdb, 0xd7, 0xf8,
	0x3c, 0xf9, 0x48, 0xc8, 0xf4, 0x0e, 0x5a, 0x5c, 0xe0, 0x70, 0x1b, 0x18, 0x9d, 0x93, 0x54, 0x42,
	0x96, 0xe4, 0x49, 0x31, 0xa9, 0x66, 0xac, 0x69, 0x96, 0x0b, 0xae, 0xe0, 0x09, 0xad, 0x93, 0x5a,
	0xd5, 0xa9, 0x04, 0x5a, 0x84, 0x6f, 0xa3, 0x7e, 0x5c, 0xf3, 0xea, 0xf2, 0x2a, 0x4b, 0xf3, 0xa4,
	0x38, 0xac, 0xff, 0xc7, 0x94, 0x11, 0xfa, 0x1b, 0xc9, 0x56, 0x71, 0xdf, 0x5b, 0xcc, 0x46, 0x01,
	0xef, 0x68, 0xe8, 0x29, 0x19, 0x73, 0x63, 0x5c, 0x36, 0xce, 0x47, 0xc5, 0xa4, 0xa2, 0xec, 0xda,
	0x98, 0xa5, 0x72, 0x9e, 0x2b, 0x81, 0x91, 0xd6, 0xa1, 0xa7, 0xe7, 0xe4, 0xe0, 0xeb, 0x0a, 0x97,
	0xed, 0x05, 0x7b, 0xc4, 0x1a, 0x05, 0x68, 0x37, 0xfc, 0xfd, 0x21, 0x16, 0xf5, 0x8f, 0xb8, 0xb9,
	0x27, 0x73, 0xa1, 0x3b, 0xb6, 0x45, 0x40, 0xe0, 0x4c, 0x6c, 0x74, 0x0f, 0xac, 0x77, 0x68, 0x07,
	0x29, 0x30, 0xae, 0xf0, 0x7c, 0xd6, 0x4a, 0xbf, 0xee, 0x57, 0x4c, 0xe8, 0xae, 0x8c, 0xae, 0xe4,
	0x46, 0x96, 0x80, 0xc6, 0xa2, 0xe0, 0x1e, 0x61, 0x1b, 0x37, 0x5c, 0xed, 0x07, 0x7f, 0xf1, 0x19,
	0x00, 0x00, 0xff, 0xff, 0x98, 0xcb, 0xc1, 0xb5, 0x79, 0x01, 0x00, 0x00,
}
