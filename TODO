ARM: upload to cloud:
    compatible=`cat /proc/device-tree/compatible`

TODO rename displayName to localDNSName? NO
TODO should have one name per overlay adapter; DnsName?

TODO different ACL rates for transmit and receive

TODO errors from iptables->acl->zedmanager status

TODO update rloc address when moving? Or add support to lisp.config to follow
     the interface address? Need one per af
     
TODO refcount on downloads. Do they drop to zero and it gets freed on rm of config?
     Test cleanup on last ref for both after download and after download + restart

TODO ntp to alpine images and ACL

TODO alpine config - enable ntp and add to acl

TODO service to mount second disk (with gpio-to-lead?) and "run=" in /proc/cmdline
     In alpine img
     
TODO use dmidecode to determine bios version etc. Put in SwStatus? Or HwStatus?
  bios-vendor
  bios-version
  bios-release-date

TODO? encrypted virtual disks? Useful if rw since contains customer data

TODO what is needed for docker/rkt? Two vdisks?

TODO name for StorageConfig*?
     Is both an Image description and aspects of the container for the image
     ImageDeploymentConfig and ImageDeploymentStatus?
     
LATER domU needs to know which overlay is which and diff than IPv6 underlay.
LATER domU needs /128 routes for multiple IPv6 overlays?

TODO handleModify's update to ACLs assumes there is no DROP rules since does inserts new rules up front.
   Need to generate new list of rules and then just apply them?
   (Using save/restore for efficiency? Should we use restore for initial set
   as well for efficiency?)
TODO xenmgr goroutines

TODO Create DeviceSwStatus separate from DeviceSwResources
     Include uplink interfaces, available memory and disk
     Trigger such exchange when local interface/address change.
     DeviceSwStatus upload results in an ack containing the global address.

---

DONE create domain name ipsets on the fly. Easy in handleCreate
   Requires some care in handleModify

DONE domainmgr target to StorageStatusList

DONE create directories in device-steps.sh?

DONE model change -> json

DONE cleanup (or measure) /var/tmp/zedmanager/downloads/pending on boot?

DONE alpine add nordmark and zededa to image.
     remove guest account? passwd?
     
DONE NAT i.e. uplink global address? (From exchanges with ZedControl).

===

DONE Onboarding time measurement

DONE rloc { address = 192.168.1.1 } for case of two behind same NAT
     Need global file - as json? Put in isZedmanager - upLinkIntf (list?)
     and add upLinkAddrs (list). Or extract address inside zedrouter (and
     detect changes)?
     ip monitor address dev wlan0
     findUplink - get all default routes? (doesn't work for infra with private
     interface)
     Make global file be [uplink1,uplink2],[ip1,ip2]; need handler in zedrouter
DONE netlink: func AddrList(link Link, family int) ([]Addr, error)     
     Assumes static set of uplink addresses.
DONE     Filter out IPv6 link-locals somehow? prio=1 for link-locals

DONE try set checkpoint-map-cache
     No difference
Without; stop one domain; 35 seconds outtage for dom0 and domU
64 bytes from zedhikey: icmp_seq=224 ttl=62 time=237 ms
64 bytes from zedhikey: icmp_seq=259 ttl=62 time=353 ms
With; start one domain; 35 seconds outtage for dom0 and domU
With? stop one domain?
43 seconds (but was other domain fully booted? CPU load?)
Start one domain?
32 seconds, 33 seconds
Stop 43
No benefit.

NOT ethtool setup in domU for checksum? How to make permanent?
	sudo ethtool -K eth1 tx-checksum-ipv6 off
	Set default in (shared?) kernel?
	Or can we force in dom0/ netback?
Needed for x86 as well.
DONE try with other mangle setup..
ip6tables -t mangle -A PREROUTING -p tcp -i bo1x1 -j CHECKSUM --checksum-fill
ip6tables -t mangle -A PREROUTING -p tcp -i bo1x2 -j CHECKSUM --checksum-fill
ip6tables -t mangle -A PREROUTING -p udp -i bo1x1 -j CHECKSUM --checksum-fill
ip6tables -t mangle -A PREROUTING -p udp -i bo1x2 -j CHECKSUM --checksum-fill

DONE upon reboot treat existing images for domU's as implicit preserve
     i.e. don't recreate from verified image.
      
DONE Cloning zedhikey04 didn't fix /etc/hostname
     Fixed in device-steps.sh
     
DONE alpine - dtb not having .dtb name?
     simplify name in verfied/<sha256>/ to be original filename i.e. preserve
     extension

DONE move state from DELIVERED to INSTALLED when all in place.

DONE handleRestart(done bool) as a hook to avoid multiple RESTART-LISP
     during restart?
     Set a deferLispRestart=true in handleRestart(false)
     Call RestartLisp in handleRestart(true)
DONE zedrouter needs to wait for zedmanager to have restarted ...
     zedmanager waits for /var/run/verifier/status/restarted to appear
     writes /var/tmp/zedrouter/config/restart
     zedrouter waits for /var/tmp/zedrouter/config/restart to appear, then
     'R' from wait
     Generalize to write restarting to all but zedrouter?
DONE add WaitForFile and use to sequence startup

DONE device-steps save old logs
     for f in /var/log/xxx*.log; do
	     datetime=`stat -c %y $f | awk '{printf "%s-%s", $1, $2}'`
	     mv $f $f.$datetime
     done
     
DONE update Device Models for Software Installation with eid allocation
example and references to github types.

DONE add device mapping to support gpiotoled.
DONE add cpu binding for rtos - freertos image?

DONE Need extensions for
     kernel="Image.LED.DomU"
     device_tree="guest-gpio.dtb" XXX or guest-led.dtb
     dtdev=["/smb/gpio@f7020000","/smb/gpio@f8013000"]
     irqs=[88,86]
     iomem=["0xf7020,1","0xf8013,1"]

DONE StorageConfig with
     Target="disk","kernel","device_tree","initrd","ramdisk"
     Overrides any "kernel" config...
     Leave kernel empty if not set. Ditto for rest.

DONE need root=. Can default to "xvda1" for compat.
     root=/dev/xvda console=hvc0
     disk = ['alpine3.img,raw,xvda,rw']

DONE put uuid in /etc/hosts just like hostname.

DONE wait code - introduce second layer of interfaces to remove duplicate code

DONE device-steps.sh - mode (from file or arg) to only run zedrouter for ctrl01?
     Check we can create dbo1x0.
     Also move ctrl01's code to /opt
     
DONE geolocation of clientIP -> hwStatus

Q: are we accepting east-west traffic on mgmt iid?
A: only those listed in zedrouter*.json.

DONE add dmidecode output to HwStatus
     dmidecode -s system-manufacturer
	  system-product-name
	  system-version
	  system-serial-number
	  system-uuid

DONE dnsmasq add tar file
DONE dnsmasq path "/"
DONE radvd path "/"

DONE EID from gopi to hikey0x: fd7b:7e5b:b572:40cf:aee4:ae25:6751:f609
DONE /etc/group for amd64 ubuntu domu - sudo group and nordmark/zededa groups

DONE zedcontrol shouldn't have eids.dbo1x0 set rule. Needs to accept everybody?
     Made it conditional on /opt/zededa/etc/infra file.
     Workaround: ip6tables -F OUTPUT

DONE avoid empty additional strings:
	`json:",omitempty"`

DONE add location information in additional json RLOC

DONE remove Src for fd00::/8 route
DONE zedrouter/radvd mtu 1280
	AdvLinkMTU  1280     
DONE zedrouter/radvd route for fd00::/8 and lower preference
     route fd00::/8 { xxx };
DONE set mtu 1280 on dbo1x0
DONE rc.local /opt

DONE move device-steps to /opt
DONE lisp wait for stopped
DONE lisp cd in STOP-LISP
DONE lisp not picking up packets until manual restart
    added wait time
    
DONE remove local names from dnsmasq: have
	nordmark@ubuntu:~$ ping zedtest4
	PING zedtest4 (172.27.2.2) 56(84) bytes of data.
	No option to dnsmasq to skip DHCP entries
	Using uuid as dhcp hostname
	
DONE dnsmasgq rename
DONE ACL DROP remove... 
DONE log.fmt when directory has been scanned?
DONE dnsmasq - remove /var/lib/misc/dnsmasq.leases on boot
DONE downloader runs ... sleep to wait for verifierStatus?
DONE log.fmt when agent starts.

===

packets sent by dom0/zedmanager hit the OUTPUT rule for dbo1x0 match-set.
Workaround:
ip6tables -I FORWARD -o dbo1x0 -m set --match-set eids.bo1x2 src -j ACCEPT
ip6tables -I FORWARD -o dbo1x0 -m set --match-set eids.bo1x1 src -j ACCEPT
DONE by not having dbo1x0 ACLs

==

FIXED eidregister/server: reusing uuid for a newly allocated eid (Allocate=True)
runs into issues; server fails it.

xenmanager:
DONE - delete file on delete (preserves dhcp lease file for unrelated AI)
DONE - (busy) wait in handleDelete before above delete.
DONE - pass Activate in DomainConfig? Copy file if !Activate
DONE - check Preserve on handleModify with !Activate
DONE - handleModify when Activate is set

verifier:
DONE - Add refcount against sha256.

acl/iptables:
DONE - local forwarding doesn't work due to
   379 39416 DROP       all      bo1x1  *       ::/0                 ::/0          Since fd00::/8 route is out dbo1x0 sufficient to drop there.
   We have a raw entry checking src/dst

DONE xenmgr - rename to domainmgr

zedmanager:
FIXED  - Adding a config file after boot results in
         AIC not found and then a handleModify, which does nothing.
DONE - Set DomainConfig with Active=false
DONE - Need handleDelete to clean up all dependent files
DONE - Need modification for ACL and eidlist in handlezedrouter

zedrouter:
NO - Seems to re-add the iptables rules for each handleModify. CHECK
 
device-steps.sh:
DONE - Need cleanup of dependent /var/run/*/config, however we have two global files
       plus the IsZedmanager zedrouter/config; preserve zedmanager/config/
DONE - keep downloads directory in place as well

NOTE:
ubuntu guest and zedrouter assumes bu is first in list of networks - becomes eth0

DONE move dnsmasq and radvd from /etc to /var/run/zedrouter/

xenmgr
 - How do we wait for state?
 - How do we find out crashed? boot failures show up as "r"
DONE - How do we always delete? Wait state to change after xl shutdown then xl destroy and wait again? Means a goroutine per UUID?
   It could periodically look for status and update.
   
DONE zedmanager:
N/A - special handling of IsZedManager - do we create it's file on the fly
   from onboarding? Don't pass to DomainMgr.
DONE - 1st read status from everybody and build collections in memory
   Implies handle* for multiple input collections.
   Should it produce status for ZedCloud?
DONE - 2nd read config from ZedCloud/dir
   
===


===

New zedmanager - no TLS
    Has the hwupdate and swupdate clients.
    Runs server as well (how?) PUSH of swconfig, GET of swstatus
    (is there also a patch of swconfig? Use directory with /var/tmp/zededa/swconfig/<eidOrName>/<version>
    SwConfig includes URL, DigestAlg, Digest (Eid, Name, Version also sent)
    SwConfig has a type (Image, Disk - with location attribute, Resource? ACL?)
    SwConfig has a signer (base64Url of cert? or pem?)
    ZedManager/dom0 has root cert; need cert chain from somewhere...

    XXX where, how do we get the peer cert chain and save it for verification?

    XXX type=process? Install in /var/tmp/zededa/app/<EID>/<version> and assume
    there is a ./run program? Works for the python apps.
    Throwaway!

Hierarchical structure?
    SwConfig -> Components list
        Each component has a URL, digest, digestalg?
	Also displayName, version?? 
    Signer, signature on all of SwConfig
    Means two levels and not hierarchical.
    Version and name in SwConfig. Means doing diffs when the version changes to
    detect that component X did not change its digest. XXX should we have informative version strings for the components? Still compare the digest? Or compare both?

==

Move to /usr/local/etc/lisp

lisp_directory = "/root/lispers.net/" if docker else "/home/pi/lispers.net/"

===

What about /var/tmp? Just a mock up.
Might want to have it survive reboot hence move to /var/zededa/device and
/var/zededa/onboarding.



